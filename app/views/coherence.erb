<div class="circles">
  <p id="warning">⚠️ L'exercice n'est pas réalisable car votre navigateur se mettrait en veille en plein milieu !</p>
  <svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 100 100" role="graphics-document">
    <circle cx="50" cy="50" r="50" fill="#b8c4ce" />
    <circle cx="50" cy="50" r="0" fill="#1b655e" id="moving-circle" />
    <circle cx="50" cy="50" r="0.5" fill="#caa53d" />
  </svg>
  <p id="instructions">Cliquez pour démarrer puis alternez entre :<br />5 secondes d'inspiration par le nez en gonflant le ventre<br />5 secondes d'expiration par la bouche en le dégonflant</p>
</div>

<script>
  if ("wakeLock" in navigator) {
    let duration   = 5000;
    let iterations = 60;

    document.getElementsByTagName("header")[0].remove();
    document.getElementById("warning").remove();

    let wakeLock = null;

    // async function to request a wake lock
    const requestWakeLock = async () => {
      try {
        wakeLock = await navigator.wakeLock.request("screen");
        wakeLock.onrelease = () => console.log("Wake Lock has been released 🔓");
      } catch (err) {
        window.alert(err.name + " : " + err.message);
      }
    } // requestWakeLock()

    document.addEventListener("click", () => {
      requestWakeLock();
      console.log("Wake Lock is active 🔒");

      document.getElementById("instructions").remove();
      document.getElementById("moving-circle").animate(
        { r: ["0%", "50%"] },
        { duration: duration, iterations: iterations, direction: "alternate", fill: "forwards" }
      );

      window.setTimeout(() => {
        wakeLock.release().then(() => {
          wakeLock = null;
        });
      }, duration * iterations);
    })
  } else {
    console.log("Wake lock is not supported by this browser 😓");
    document.getElementsByTagName("svg")[0].remove();
    document.getElementById("instructions").remove();
  }
</script>
